@* @model IEnumerable<GASSBOOKING_WEBSITE.Models.Cylinder>
@{
    ViewData["Title"] = "Admin Dashboard";
}

<h2>Cylinder</h2>
<br>

@if (Model == null || !Model.Any())
{
    <p>No cylinders found.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Cylinder ID</th>
                <th>Cylinder Type</th>
                <th>Total Stock</th>
                <th>Filled Cylinders</th>
                <th>Empty Cylinders</th>
                <th>Amount</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var cylinder in Model)
            {
                <tr>
                    <td>@cylinder.CylinderId</td>
                    <td>@cylinder.CylinderType</td>
                    <td>@cylinder.CylinderTotalStock</td>
                    <td>@cylinder.FilledCylinder</td>
                    <td>@cylinder.EmptyCylinder</td>
                    <td>@cylinder.Amount</td>
                </tr>
            }
        </tbody>
    </table>
}
 *@

 @model IEnumerable<GASSBOOKING_WEBSITE.Models.Cylinder>
@{
    ViewData["Title"] = "Admin Dashboard";
}

<h2>Cylinder</h2>
<br>

<button class="btn btn-success" data-toggle="modal" data-target="#createModal">Create New Cylinder</button>
<br>
<br>

@if (Model == null || !Model.Any())
{
    <p>No cylinders found.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Cylinder ID</th>
                <th>Cylinder Type</th>
                <th>Total Stock</th>
                <th>Filled Cylinders</th>
                <th>Empty Cylinders</th>
                <th>Amount</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var cylinder in Model)
            {
                <tr id="cylinder-@cylinder.CylinderId">
                    <td>@cylinder.CylinderId</td>
                    <td contenteditable="true" data-field="CylinderType">@cylinder.CylinderType</td>
                    <td contenteditable="true" data-field="CylinderTotalStock">@cylinder.CylinderTotalStock</td>
                    <td>@cylinder.FilledCylinder</td>
                    <td>@cylinder.EmptyCylinder</td>
                    <td contenteditable="true" data-field="Amount">@cylinder.Amount</td>
                    <td>
                        <button class="btn btn-primary" onclick="saveCylinder(@cylinder.CylinderId)">Save</button>
                        <button class="btn btn-danger" data-id="@cylinder.CylinderId" onclick="confirmDelete(this)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<!-- Modal for Creating a New Cylinder -->
<div class="modal" id="createModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create New Cylinder</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="createCylinderForm">
                    <div class="form-group">
                        <label>Cylinder Type</label>
                        <input type="text" class="form-control" id="CylinderType" required>
                    </div>
                    <div class="form-group">
                        <label>Total Stock</label>
                        <input type="number" class="form-control" id="CylinderTotalStock" required>
                    </div>
                    <div class="form-group">
                        <label>Filled Cylinders</label>
                        <input type="number" class="form-control" id="FilledCylinder" required>
                    </div>
                    <div class="form-group">
                        <label>Empty Cylinders</label>
                        <input type="number" class="form-control" id="EmptyCylinder" required>
                    </div>
                    <div class="form-group">
                        <label>Amount</label>
                        <input type="number" class="form-control" id="Amount" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="createCylinderButton">Create</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal for Confirmation -->
<div class="modal" id="deleteModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Deletion</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this cylinder?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteButton">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <script>
        let cylinderIdToDelete = 0;

        function saveCylinder(id) {
            const row = document.getElementById(`cylinder-${id}`);
            const type = row.cells[1].innerText;
            const totalStock = row.cells[2].innerText;
            const amount = row.cells[5].innerText;

            $.ajax({
                url: '/Admin/Edit',
                type: 'PUT', // Use PUT method
                contentType: 'application/json', // Set content type for JSON
                data: JSON.stringify({
                    CylinderId: id,
                    CylinderType: type,
                    CylinderTotalStock: totalStock,
                    Amount: amount
                }),
                success: function () {
                    alert('Cylinder updated successfully!');
                },
                error: function (xhr) {
                    // Log the error response for debugging
                    console.error(xhr.responseText);
                    alert('Error updating cylinder: ' + xhr.responseText);
                }
            });
        }


        function confirmDelete(button) {
            cylinderIdToDelete = $(button).data('id');
            $('#deleteModal').modal('show');
        }

        $('#confirmDeleteButton').click(function () {
            $.ajax({
                url: '/Admin/Delete',
                type: 'DELETE', // Change to DELETE to match the method
                data: { id: cylinderIdToDelete },
                success: function () {
                    alert('Cylinder deleted successfully!');
                    $(`#cylinder-${cylinderIdToDelete}`).remove();
                    $('#deleteModal').modal('hide');
                },
                error: function () {
                    alert('Error deleting cylinder.');
                }
            });
        });

        $('#createCylinderButton').click(function () {
            const cylinderData = {
                CylinderType: $('#CylinderType').val(),
                CylinderTotalStock: $('#CylinderTotalStock').val(),
                FilledCylinder: $('#FilledCylinder').val(),
                EmptyCylinder: $('#EmptyCylinder').val(),
                Amount: $('#Amount').val()
            };

            $.ajax({
                url: '/Admin/Add',
                type: 'POST',
                data: cylinderData,
                success: function () {
                    alert('Cylinder created successfully!');
                    location.reload(); // Reload the page to see the new cylinder
                },
                error: function () {
                    alert('Error creating cylinder.');
                }
            });
        });
    </script>
}
